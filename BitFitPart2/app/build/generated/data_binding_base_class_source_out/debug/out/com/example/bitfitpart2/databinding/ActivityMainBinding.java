// Generated by view binder compiler. Do not edit!
package com.example.bitfitpart2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bitfitpart2.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.Override;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Button addEntryButton;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView averageFeeling;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView averageHoursSlept;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout averageMetricsContainer;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final BottomNavigationView bottomNavigation;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView entriesLabel;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView feelingLabel;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final SeekBar feelingSeekBar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView feelingValue;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView hoursSleptLabel;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final SeekBar hoursSleptSeekBar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView hoursSleptValue;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final FragmentContainerView navHostFragment;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final EditText notesField;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final RecyclerView recyclerView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView titleBar;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @Nullable Button addEntryButton,
      @Nullable TextView averageFeeling, @Nullable TextView averageHoursSlept,
      @Nullable LinearLayout averageMetricsContainer,
      @Nullable BottomNavigationView bottomNavigation, @Nullable TextView entriesLabel,
      @Nullable TextView feelingLabel, @Nullable SeekBar feelingSeekBar,
      @Nullable TextView feelingValue, @Nullable TextView hoursSleptLabel,
      @Nullable SeekBar hoursSleptSeekBar, @Nullable TextView hoursSleptValue,
      @Nullable FragmentContainerView navHostFragment, @Nullable EditText notesField,
      @Nullable RecyclerView recyclerView, @Nullable TextView titleBar) {
    this.rootView = rootView;
    this.addEntryButton = addEntryButton;
    this.averageFeeling = averageFeeling;
    this.averageHoursSlept = averageHoursSlept;
    this.averageMetricsContainer = averageMetricsContainer;
    this.bottomNavigation = bottomNavigation;
    this.entriesLabel = entriesLabel;
    this.feelingLabel = feelingLabel;
    this.feelingSeekBar = feelingSeekBar;
    this.feelingValue = feelingValue;
    this.hoursSleptLabel = hoursSleptLabel;
    this.hoursSleptSeekBar = hoursSleptSeekBar;
    this.hoursSleptValue = hoursSleptValue;
    this.navHostFragment = navHostFragment;
    this.notesField = notesField;
    this.recyclerView = recyclerView;
    this.titleBar = titleBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    Button addEntryButton = ViewBindings.findChildViewById(rootView, R.id.addEntryButton);

    TextView averageFeeling = ViewBindings.findChildViewById(rootView, R.id.averageFeeling);

    TextView averageHoursSlept = ViewBindings.findChildViewById(rootView, R.id.averageHoursSlept);

    LinearLayout averageMetricsContainer = ViewBindings.findChildViewById(rootView, R.id.averageMetricsContainer);

    BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, R.id.bottom_navigation);

    TextView entriesLabel = ViewBindings.findChildViewById(rootView, R.id.entriesLabel);

    TextView feelingLabel = ViewBindings.findChildViewById(rootView, R.id.feelingLabel);

    SeekBar feelingSeekBar = ViewBindings.findChildViewById(rootView, R.id.feelingSeekBar);

    TextView feelingValue = ViewBindings.findChildViewById(rootView, R.id.feelingValue);

    TextView hoursSleptLabel = ViewBindings.findChildViewById(rootView, R.id.hoursSleptLabel);

    SeekBar hoursSleptSeekBar = ViewBindings.findChildViewById(rootView, R.id.hoursSleptSeekBar);

    TextView hoursSleptValue = ViewBindings.findChildViewById(rootView, R.id.hoursSleptValue);

    FragmentContainerView navHostFragment = ViewBindings.findChildViewById(rootView, R.id.nav_host_fragment);

    EditText notesField = ViewBindings.findChildViewById(rootView, R.id.notesField);

    RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, R.id.recyclerView);

    TextView titleBar = ViewBindings.findChildViewById(rootView, R.id.titleBar);

    return new ActivityMainBinding((ConstraintLayout) rootView, addEntryButton, averageFeeling,
        averageHoursSlept, averageMetricsContainer, bottomNavigation, entriesLabel, feelingLabel,
        feelingSeekBar, feelingValue, hoursSleptLabel, hoursSleptSeekBar, hoursSleptValue,
        navHostFragment, notesField, recyclerView, titleBar);
  }
}
