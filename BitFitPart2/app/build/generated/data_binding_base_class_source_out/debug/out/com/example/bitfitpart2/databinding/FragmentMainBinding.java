// Generated by view binder compiler. Do not edit!
package com.example.bitfitpart2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bitfitpart2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addEntryButton;

  @NonNull
  public final TextView feelingLabel;

  @NonNull
  public final SeekBar feelingSeekBar;

  @NonNull
  public final TextView feelingValue;

  @NonNull
  public final TextView hoursSleptLabel;

  @NonNull
  public final SeekBar hoursSleptSeekBar;

  @NonNull
  public final TextView hoursSleptValue;

  @NonNull
  public final TextView mainFragmentHeader;

  @NonNull
  public final EditText notesField;

  @NonNull
  public final RecyclerView recyclerView;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button addEntryButton,
      @NonNull TextView feelingLabel, @NonNull SeekBar feelingSeekBar,
      @NonNull TextView feelingValue, @NonNull TextView hoursSleptLabel,
      @NonNull SeekBar hoursSleptSeekBar, @NonNull TextView hoursSleptValue,
      @NonNull TextView mainFragmentHeader, @NonNull EditText notesField,
      @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.addEntryButton = addEntryButton;
    this.feelingLabel = feelingLabel;
    this.feelingSeekBar = feelingSeekBar;
    this.feelingValue = feelingValue;
    this.hoursSleptLabel = hoursSleptLabel;
    this.hoursSleptSeekBar = hoursSleptSeekBar;
    this.hoursSleptValue = hoursSleptValue;
    this.mainFragmentHeader = mainFragmentHeader;
    this.notesField = notesField;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addEntryButton;
      Button addEntryButton = ViewBindings.findChildViewById(rootView, id);
      if (addEntryButton == null) {
        break missingId;
      }

      id = R.id.feelingLabel;
      TextView feelingLabel = ViewBindings.findChildViewById(rootView, id);
      if (feelingLabel == null) {
        break missingId;
      }

      id = R.id.feelingSeekBar;
      SeekBar feelingSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (feelingSeekBar == null) {
        break missingId;
      }

      id = R.id.feelingValue;
      TextView feelingValue = ViewBindings.findChildViewById(rootView, id);
      if (feelingValue == null) {
        break missingId;
      }

      id = R.id.hoursSleptLabel;
      TextView hoursSleptLabel = ViewBindings.findChildViewById(rootView, id);
      if (hoursSleptLabel == null) {
        break missingId;
      }

      id = R.id.hoursSleptSeekBar;
      SeekBar hoursSleptSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (hoursSleptSeekBar == null) {
        break missingId;
      }

      id = R.id.hoursSleptValue;
      TextView hoursSleptValue = ViewBindings.findChildViewById(rootView, id);
      if (hoursSleptValue == null) {
        break missingId;
      }

      id = R.id.mainFragmentHeader;
      TextView mainFragmentHeader = ViewBindings.findChildViewById(rootView, id);
      if (mainFragmentHeader == null) {
        break missingId;
      }

      id = R.id.notesField;
      EditText notesField = ViewBindings.findChildViewById(rootView, id);
      if (notesField == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, addEntryButton, feelingLabel,
          feelingSeekBar, feelingValue, hoursSleptLabel, hoursSleptSeekBar, hoursSleptValue,
          mainFragmentHeader, notesField, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
